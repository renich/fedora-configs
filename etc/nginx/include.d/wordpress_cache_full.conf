# WordPress w/ WP Supercache (Full-On mode)
# http://www.phoenixvps.com/guides/2013/04/nginx-configuration-examples

index index.html index.htm index.php;

location / { 
    # This line when enabled will use Nginx's gzip static module
    gzip_static on;

    # Disables serving gzip content to IE 6 or below
    gzip_disable        "MSIE [1-6]\.";

    # Sets the default type to text/html so that gzipped content is served
    # as html, instead of raw uninterpreted data.
    default_type text/html;

    # does the requested file exist exactly as it is? if yes, serve it and stop here
    if (-f $request_filename) { break; }

    # sets some variables to help test for the existence of a cached copy of the request
    set $supercache_file '';
    set $supercache_uri $request_uri;

    # IF the request is a post, has a query attached, or a cookie
    # then don't serve the cache (ie: users logged in, or posting comments)
    if ($request_method = POST) { set $supercache_uri ''; }
    if ($query_string) { set $supercache_uri ''; }
    if ($http_cookie ~* "comment_author_|wordpress|wp-postpass_" ) { 
        set $supercache_uri ''; 
    }

    # if the supercache_uri variable hasn't been blanked by this point, attempt
    # to set the name of the destination to the possible cache file
    if ($supercache_uri ~ ^(.+)$) { 
        set $supercache_file /wp-content/cache/supercache/$http_host/$1index.html; 
    }

    # If a cache file of that name exists, serve it directly
    if (-f $document_root$supercache_file) { rewrite ^ $supercache_file break; }

    # Otherwise send the request back to index.php for further processing
    if (!-e $request_filename) { rewrite ^ /index.php last; }
}

location /search { 
    limit_req zone=kbeezieone burst=3 nodelay; rewrite ^ /index.php; 
}

fastcgi_intercept_errors off;

location ~ \.php$ {
    include /etc/nginx/fastcgi_params;
}
